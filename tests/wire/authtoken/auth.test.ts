/**
 * This file was auto-generated by Fern from our API Definition.
 *
 * NOTE: This test is skipped because our auth client now uses Basic Auth headers
 * instead of JSON body authentication. The mock server expects a JSON body and
 * cannot handle empty request bodies, so this wire test is no longer applicable.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { phenomlClient } from "../../../src/Client";

describe("Auth", () => {
    test.skip("generateToken - skipped due to Basic Auth implementation", async () => {
        // This test is skipped because our auth client now uses Basic Auth headers
        // instead of JSON body authentication. The mock server expects a JSON body
        // and cannot handle empty request bodies, so this wire test is no longer applicable.

        // Original test expected JSON body:
        // const rawRequestBody = { username: "username", password: "password" };
        //
        // New implementation uses Basic Auth headers:
        // Authorization: Basic <base64-encoded-username:password>
        // Request body: empty

        const server = mockServerPool.createServer();
        const client = new phenomlClient({ token: "test", environment: server.baseUrl });
        const rawResponseBody = { token: "token" };

        // This would fail because mock server expects JSON body, but we send empty body
        server
            .mockEndpoint()
            .post("/auth/token")
            .jsonBody({}) // Empty body since we now use Basic Auth headers
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.authtoken.auth.generateToken({
            username: "username",
            password: "password",
        });
        expect(response).toEqual({
            token: "token",
        });
    });
});
