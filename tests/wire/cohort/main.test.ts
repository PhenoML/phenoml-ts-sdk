/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { phenomlClient } from "../../../src/Client";

describe("Cohort", () => {
    test("analyze", async () => {
        const server = mockServerPool.createServer();
        const client = new phenomlClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { text: "female patients over 65 with diabetes but not hypertension" };
        const rawResponseBody = {
            success: true,
            message: "Cohort analysis completed successfully. Generated 3 search queries from 3 concepts.",
            queries: [
                {
                    resource_type: "Patient",
                    search_params: "gender=female&birthdate=le1959-01-01",
                    concept: "female patients over 65",
                    exclude: false,
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/cohort")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.cohort.analyze({
            text: "female patients over 65 with diabetes but not hypertension",
        });
        expect(response).toEqual({
            success: true,
            message: "Cohort analysis completed successfully. Generated 3 search queries from 3 concepts.",
            queries: [
                {
                    resource_type: "Patient",
                    search_params: "gender=female&birthdate=le1959-01-01",
                    concept: "female patients over 65",
                    exclude: false,
                },
            ],
        });
    });
});
